<snippet>
	<content><![CDATA[
struct DynamicConnectivity {
	struct Node {
		int left, right, parent;
		bool reverse;
		int size;

		Node() : left(-1), right(-1), parent(-1), reverse(false), size(1) {}
	};

	vector<Node> nodes;

	DynamicConnectivity(int n) : nodes(n) {}

	void ensureNode(int u) {
		if (u >= nodes.size()) nodes.resize(u + 1);
	}

	void access(int u) {
		ensureNode(u);
		int last = -1;
		for (int v = u; v != -1; v = nodes[v].parent) {
			splay(v);
			nodes[v].right = last;
			last = v;
		}
		splay(u);
	}

	void splay(int u) {
		while (nodes[u].parent != -1) {
			int p = nodes[u].parent;
			int gp = nodes[p].parent;
			if (gp != -1) {
				if ((nodes[gp].left == p) == (nodes[p].left == u)) rotate(p);
				else rotate(u);
			}
			rotate(u);
		}
	}

	void rotate(int u) {
		int p = nodes[u].parent;
		int gp = p != -1 ? nodes[p].parent : -1;

		if (p != -1) {
			if (u == nodes[p].left) {
				nodes[p].left = nodes[u].right;
				if (nodes[u].right != -1) nodes[nodes[u].right].parent = p;
				nodes[u].right = p;
			} else {
				nodes[p].right = nodes[u].left;
				if (nodes[u].left != -1) nodes[nodes[u].left].parent = p;
				nodes[u].left = p;
			}
		}

		nodes[u].parent = gp;
		nodes[p].parent = u;

		if (gp != -1) {
			if (nodes[gp].left == p) nodes[gp].left = u;
			else nodes[gp].right = u;
		}
	}

	void link(int u, int v) {
		ensureNode(u);
		ensureNode(v);
		access(u);
		access(v);
		nodes[u].parent = v;
	}

	void cut(int u, int v) {
		access(u);
		access(v);
		if (nodes[u].parent == v) nodes[u].parent = -1;
		else if (nodes[v].parent == u) nodes[v].parent = -1;
	}

	// Check if u and v are connected
	bool connected(int u, int v) {
		access(u);
		access(v);
		return u == v || nodes[u].parent != -1;
	}
};

// Example usage:
// DynamicConnectivity dc(5); // Initialize the structure for 5 nodes
// dc.link(0, 1); // Link node 0 and node 1
// (dc.connected(0, 2) ? "Yes" : "No") << endl;
// dc.cut(1, 2); // Cut the connection between node 1 and node 2
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>DC</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
